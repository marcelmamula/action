---
# Ansible Playbook for SAP S/4HANA Standard installation

# Use include_role / include_tasks inside Ansible Task block, instead of using roles declaration or Task block with import_roles.
# This ensures Ansible Roles, and the tasks within, will be parsed in sequence instead of parsing at Playbook initialisation.


#### Begin Infrastructure-as-Code provisioning ####

- name: Ansible Play to gather input for gathering vars and VM provisioning
  hosts: localhost
  gather_facts: false

  # pre_tasks used only for Interactive Prompts only and can be removed without impact
  pre_tasks:

    - name: Playbook Interactive - Check if standard execution with an Ansible Extravars file is requested by end user
      ansible.builtin.set_fact:
        playbook_enable_interactive_prompts: "{{ true if (sap_vm_provision_iac_type is undefined and sap_vm_provision_iac_platform is undefined) else false }}"

    - name: Playbook Interactive - Provision execution - Input for sap_vm_provision_iac_type
      ansible.builtin.pause:
        prompt: "Please choose Infrastructure-as-Code automation from list - ansible , ansible_to_terraform (for existing_hosts, use Ansible standard execution with an Ansible Extravars file)"
      register: sap_vm_provision_iac_type_register
      no_log: true
      when: playbook_enable_interactive_prompts

    - name: Playbook Interactive - Provision execution - Input for sap_vm_provision_iac_platform
      ansible.builtin.pause:
        prompt: "Please choose Infrastructure Platform from list - aws_ec2_vs , gcp_ce_vm , ibmcloud_powervs , ibmcloud_vs , ibmpowervm_vm , kubevirt_vm , msazure_vm , ovirt_vm"
      register: sap_vm_provision_iac_platform_register
      no_log: true
      when: playbook_enable_interactive_prompts

    - name: Playbook Interactive - SAP Deployment execution - Input for playbook_enable_default_vars_sap
      ansible.builtin.pause:
        prompt: "Please choose if defaults should be used for SAP Software installation (e.g. SAP System ID) - true , false"
      register: playbook_enable_default_vars_sap_register
      no_log: true
      when: playbook_enable_interactive_prompts

    - name: Playbook Interactive - Set facts from initial prompts
      ansible.builtin.set_fact:
        sap_vm_provision_iac_type: "{{ sap_vm_provision_iac_type_register.user_input }}"
        sap_vm_provision_iac_platform: "{{ sap_vm_provision_iac_platform_register.user_input }}"
        playbook_enable_default_vars_sap: "{{ playbook_enable_default_vars_sap_register.user_input }}"
      when: playbook_enable_interactive_prompts


#### Provision VM ####

- name: Ansible Play to create dynamic inventory group for provisioning
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Create dynamic inventory group for Ansible Role sap_vm_provision
      ansible.builtin.add_host:
        name: "{{ item }}"
        group: sap_vm_provision_target_inventory_group
      loop: "{{ lookup('ansible.builtin.vars', 'sap_vm_provision_' + sap_vm_provision_iac_platform + '_host_specifications_dictionary')[sap_vm_provision_host_specification_plan].keys() }}"
      when: sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"

- name: Ansible Play to provision hosts for SAP
  hosts: sap_vm_provision_target_inventory_group # Ansible Play target hosts pattern, use Inventory Group created by previous Ansible Task (add_host)
  gather_facts: false
  tasks:

    - name: Execute Ansible Role sap_vm_provision
      ansible.builtin.include_role:
        name: community.sap_infrastructure.sap_vm_provision
      when: sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"


#### VM storage filesystem setup ####

- name: Ansible Play for hosts storage setup
  hosts: all
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    # Use inventory_hostname_short to retrieve host specification from the dictionary. While ansible_hostname will work for Ansible only, using Ansible>Terraform may see ansible_hostname as 'localhost' and fail
    - name: Execute Ansible Role sap_storage_setup
      ansible.builtin.include_role:
        name: community.sap_install.sap_storage_setup
      vars:
        sap_storage_setup_sid: "{{ host_specifications_dictionary[sap_vm_provision_host_specification_plan][inventory_hostname_short].sap_storage_setup_sid | default('') }}"
        sap_storage_setup_nwas_abap_ascs_instance_nr: "{{ host_specifications_dictionary[sap_vm_provision_host_specification_plan][inventory_hostname_short].sap_storage_setup_nwas_abap_ascs_instance_nr | default('') }}"
        sap_storage_setup_nwas_abap_pas_instance_nr: "{{ host_specifications_dictionary[sap_vm_provision_host_specification_plan][inventory_hostname_short].sap_storage_setup_nwas_abap_pas_instance_nr | default('') }}"
        sap_storage_setup_nwas_abap_aas_instance_nr: "{{ host_specifications_dictionary[sap_vm_provision_host_specification_plan][inventory_hostname_short].sap_storage_setup_nwas_abap_aas_instance_nr | default('') }}"
        sap_storage_setup_host_type: "{{ host_specifications_dictionary[sap_vm_provision_host_specification_plan][inventory_hostname_short].sap_storage_setup_host_type | list }}"
        # sap_storage_setup_definition set for the host by sap_vm_provision Ansible Role
      when:
        - sap_vm_provision_iac_type == "ansible" or sap_vm_provision_iac_type == "ansible_to_terraform"
        - not sap_vm_provision_iac_type == "existing_hosts"


# - name: Ansible Play to execute Preflight Checks
#   hosts: all
#   become: true
#   any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
#   max_fail_percentage: 0
#   tasks:

#     - name: Execute Ansible Role sap_vm_preflight_checks
#       ansible.builtin.include_role:
#         name: community.sap_infrastructure.sap_vm_verify


- name: Ansible Play for ensuring rsync on all hosts
  hosts: all
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Install rsync
      ansible.builtin.package:
        name:
          - rsync
        state: present



#### Begin downloading SAP software installation media to hosts ####

- name: Ansible Play for downloading SAP S/4HANA installation media
  hosts: project_dev_nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    # SAP software download will only occur if the 'community.sap_launchpad' collection is installed.
    # Playbook will continue without the collection, assuming SAP software is already available.
    - name: Check availability of sap_launchpad collection on execution node
      delegate_to: localhost
      ansible.builtin.command:
        cmd: ansible-galaxy collection list
      register: sap_playbook_collection_list_output

    - name: Execute Ansible Role sap_software_download
      ansible.builtin.include_role:
        name: community.sap_launchpad.sap_software_download
      vars:
        sap_software_download_suser_id: "{{ sap_id_user }}"
        sap_software_download_suser_password: "{{ sap_id_user_password }}"
        sap_software_download_directory: "{{ sap_install_media_detect_source_directory }}"
        sap_software_download_deduplicate: first
        sap_software_download_files: "{{ softwarecenter_search_list_sapcar_x86_64
          if ansible_architecture == 'x86_64' else softwarecenter_search_list_sapcar_ppc64le }}"
        sap_software_download_mp_transaction: "{{ sap_maintenance_planner_transaction_name }}"
      when: sap_playbook_collection_list_output.stdout_lines | select('search', 'community.sap_launchpad')

    - name: Find SAP HANA installation media
      ansible.builtin.find:
        paths:
          - "{{ sap_install_media_detect_source_directory }}"
        patterns: "{{ sap_hana_install_media_dictionary.sap_hana_2_install.software_files_wildcard_list }}"
        recurse: true
      register: sap_hana_install_media_files

    - name: Find SAP NetWeaver ASCS and PAS installation media
      ansible.builtin.find:
        paths:
          - "{{ sap_install_media_detect_source_directory }}"
        patterns: "{{ sap_swpm_templates_install_dictionary[sap_swpm_templates_product_input_prefix].software_files_wildcard_list }}"
        recurse: true
      register: sap_nwas_install_media_files

    - name: Prepare for file transfers, copy Private SSH Key used in Terraform deployment (temporary)
      ansible.builtin.copy:
        src: "{{ sap_vm_provision_terraform_work_dir_path }}/ssh/hosts_rsa"
        dest: "/tmp/hosts_rsa"
        mode: "0400"
      when: sap_vm_provision_ssh_host_private_key_file_path is undefined

    - name: Prepare for file transfers, copy Private SSH Key from local (Ansible host)
      ansible.builtin.copy:
        src: "{{ sap_vm_provision_ssh_host_private_key_file_path }}"
        dest: "/tmp/hosts_rsa"
        mode: "0400"
      when: sap_vm_provision_ssh_host_private_key_file_path is defined


- name: Ansible Play for host variables
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary, project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Set var of Hostnames of hosts
      ansible.builtin.set_fact:
        sap_inventory_project_dev_hana_primary_hostname: "{{ hostvars[inventory_hostname].groups.project_dev_hana_primary[0] }}"
        sap_inventory_project_dev_nwas_pas_hostname: "{{ hostvars[inventory_hostname].groups.project_dev_nwas_pas[0] }}"
        sap_inventory_project_tst_hana_primary_hostname: "{{ hostvars[inventory_hostname].groups.project_tst_hana_primary[0] }}"
        sap_inventory_project_tst_nwas_pas_hostname: "{{ hostvars[inventory_hostname].groups.project_tst_nwas_pas[0] }}"
        sap_inventory_project_prd_hana_primary_hostname: "{{ hostvars[inventory_hostname].groups.project_prd_hana_primary[0] }}"
        sap_inventory_project_prd_nwas_pas_hostname: "{{ hostvars[inventory_hostname].groups.project_prd_nwas_pas[0] }}"

    - name: Set var of IP Addresses of hosts
      ansible.builtin.set_fact:
        sap_inventory_project_dev_hana_primary_ip: "{{ hostvars[sap_inventory_project_dev_hana_primary_hostname].ansible_host }}"
        sap_inventory_project_dev_nwas_pas_ip: "{{ hostvars[sap_inventory_project_dev_nwas_pas_hostname].ansible_host }}"
        sap_inventory_project_tst_hana_primary_ip: "{{ hostvars[sap_inventory_project_tst_hana_primary_hostname].ansible_host }}"
        sap_inventory_project_tst_nwas_pas_ip: "{{ hostvars[sap_inventory_project_tst_nwas_pas_hostname].ansible_host }}"
        sap_inventory_project_prd_hana_primary_ip: "{{ hostvars[sap_inventory_project_prd_hana_primary_hostname].ansible_host }}"
        sap_inventory_project_prd_nwas_pas_ip: "{{ hostvars[sap_inventory_project_prd_nwas_pas_hostname].ansible_host }}"

- name: Ansible Play for updating /etc/hosts file before SAP software installations
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary, project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    # Ensure SAP AnyDB, SAP HANA or SAP NetWeaver hostname is not localhost in /etc/hosts. See SAP Note 1054467 - Local host name refers to loopback address
    - name: Update /etc/hosts file
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        line: "{{ item }}"
        state: present
      loop:
        - "{{ sap_inventory_project_dev_hana_primary_ip }}\t{{ sap_inventory_project_dev_hana_primary_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_dev_hana_primary_hostname }}"
        - "{{ sap_inventory_project_dev_nwas_pas_ip }}\t{{ sap_inventory_project_dev_nwas_pas_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_dev_nwas_pas_hostname }}"
        - "{{ sap_inventory_project_tst_hana_primary_ip }}\t{{ sap_inventory_project_tst_hana_primary_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_tst_hana_primary_hostname }}"
        - "{{ sap_inventory_project_tst_nwas_pas_ip }}\t{{ sap_inventory_project_tst_nwas_pas_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_tst_nwas_pas_hostname }}"
        - "{{ sap_inventory_project_prd_hana_primary_ip }}\t{{ sap_inventory_project_prd_hana_primary_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_prd_hana_primary_hostname }}"
        - "{{ sap_inventory_project_prd_nwas_pas_ip }}\t{{ sap_inventory_project_prd_nwas_pas_hostname }}.{{ ansible_domain }}\t{{ sap_inventory_project_prd_nwas_pas_hostname }}"


- name: Ansible Play for copying SAP HANA Database Server installation media to other hosts
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Set var of files list from SAP NWAS, using lookup from Ansible hostvars with key as SAP NWAS Hostname
      ansible.builtin.set_fact:
        sap_hana_install_media_files_list: "{{ hostvars[sap_inventory_project_dev_nwas_pas_hostname].sap_hana_install_media_files.files | map(attribute='path') | list }}"

#    - name: Debug output
#      debug:
#        var: sap_hana_install_media_files_list
#        var: sap_inventory_project_dev_nwas_pas_ip

    - name: Transfer SAP HANA installation media to SAP HANA Primary
      delegate_to: "{{ sap_inventory_project_dev_nwas_pas_ip }}"
      remote_user: "root"
      ansible.posix.synchronize:
        src: "{{ item }}"
        dest: "{{ sap_install_media_detect_source_directory }}"
        mode: "push"
        dest_port: 22
        use_ssh_args: false
        verify_host: false
        private_key: "/tmp/hosts_rsa"
#        set_remote_user: false
      loop: "{{ sap_hana_install_media_files_list }}"


- name: Ansible Play for copying SAP NetWeaver installation media to host
  hosts: project_tst_nwas_pas, project_prd_nwas_pas # removed project_dev_nwas_pas as this is a roundtrip
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Set var of files list from SAP NWAS, using lookup from Ansible hostvars with key as SAP NWAS PAS Hostname
      ansible.builtin.set_fact:
        sap_nwas_install_media_files_list: "{{ hostvars[sap_inventory_project_dev_nwas_pas_hostname].sap_nwas_install_media_files.files | map(attribute='path') | list }}"

#    - name: Debug output
#      debug:
#        var: sap_nwas_install_media_files_list
#        var: sap_inventory_project_dev_nwas_pas_ip

    - name: Transfer SAP NetWeaver ASCS installation media to host
      delegate_to: "{{ sap_inventory_project_dev_nwas_pas_ip }}"
      remote_user: "root"
      ansible.posix.synchronize:
        src: "{{ item }}"
        dest: "{{ sap_install_media_detect_source_directory }}"
        mode: "push"
        dest_port: 22
        use_ssh_args: false
        verify_host: false
        private_key: "/tmp/hosts_rsa"
#        set_remote_user: false
      loop: "{{ sap_nwas_install_media_files_list }}"


- name: Ansible Play to remove temporary files from SAP NetWeaver PAS
  hosts: project_dev_nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Remove temporary file, if it exists
      ansible.builtin.file:
        path: "/tmp/hosts_rsa"
        state: absent


#### Begin SAP software hosts preparation ####

- name: Ansible Play for preparing all SAP software hosts
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary, project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_general_preconfigure
      ansible.builtin.include_role:
        name: community.sap_install.sap_general_preconfigure


- name: Ansible Play for preparing all SAP NetWeaver hosts
  hosts: project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:
    - name: Execute Ansible Role sap_netweaver_preconfigure
      ansible.builtin.include_role:
        name: community.sap_install.sap_netweaver_preconfigure


- name: Ansible Play for preparing all SAP HANA hosts
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:
    - name: Execute Ansible Role sap_hana_preconfigure
      ansible.builtin.include_role:
        name: community.sap_install.sap_hana_preconfigure



#### Begin SAP software installations ####

- name: Ansible Play for SAP HANA Database Server installation
  hosts: project_dev_hana_primary, project_tst_hana_primary, project_prd_hana_primary
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      ansible.builtin.include_role:
        name: community.sap_install.sap_install_media_detect
      vars:
        sap_install_media_detect_swpm: false
        sap_install_media_detect_hostagent: true
        sap_install_media_detect_igs: false
        sap_install_media_detect_kernel: false
        sap_install_media_detect_webdisp: false
        sap_install_media_detect_db: "saphana"

    # Install SAP HANA
    - name: Execute Ansible Role sap_hana_install
      ansible.builtin.include_role:
        name: community.sap_install.sap_hana_install
      # vars:
      #   - sap_hana_sid: "{{ sap_hana_sid }}"
      #   - sap_hana_install_instance_nr: "{{ sap_hana_install_instance_nr }}"


- name: Ansible Play for SAP NetWeaver Application Server installation - ABAP Central Services (ASCS), Database Load, Primary Application Server (PAS)
  hosts: project_dev_nwas_pas, project_tst_nwas_pas, project_prd_nwas_pas
  become: true
  any_errors_fatal: true # https://docs.ansible.com/ansible/latest/user_guide/playbooks_error_handling.html#aborting-a-play-on-all-hosts
  max_fail_percentage: 0
  tasks:

    - name: Execute Ansible Role sap_install_media_detect
      ansible.builtin.include_role:
        name: community.sap_install.sap_install_media_detect
      vars:
        sap_install_media_detect_swpm: true
        sap_install_media_detect_hostagent: true
        sap_install_media_detect_igs: true
        sap_install_media_detect_kernel: true
        sap_install_media_detect_webdisp: false
        sap_install_media_detect_db_client: "saphana"
        sap_install_media_detect_export: "saps4hana"

    - name: Execute Ansible Role sap_swpm
      ansible.builtin.include_role:
        name: community.sap_install.sap_swpm
      vars:
        sap_swpm_db_host: "{{ lookup('vars', 'sap_inventory_' + sap_system_type + '_hana_primary_hostname') }}"
        sap_swpm_templates_product_input: "{{ sap_swpm_templates_product_input_prefix }}"

        #- sap_swpm_sid: "{{ sap_swpm_sid }}"
        #- sap_swpm_ascs_instance_nr: "{{ sap_swpm_ascs_instance_nr }}"
        #- sap_swpm_pas_instance_nr: "{{ sap_swpm_pas_instance_nr }}"
        # - sap_swpm_db_sid: "{{ sap_swpm_db_sid }}"
        #- sap_swpm_db_instance_nr: "{{ sap_swpm_db_instance_nr }}"



    # - name: Execute Ansible Role sap_profile_update to update Profile for ICM HTTPS
    #   ansible.builtin.include_role:
    #     name: community.sap_operations.sap_profile_update
    #   vars:
    #     sap_update_profile_sid: "{{ sap_system_sid }}"
    #     sap_update_profile_instance_nr: "{{ sap_system_nwas_abap_pas_instance_nr }}"
    #     sap_update_profile_default_profile_params:
    #       - icm/server_port_1 = PROT=HTTPS,PORT=443$$,PROCTIMEOUT=600,TIMEOUT=3600
    #     sap_update_profile_instance_profile_params:
    #       - icm/server_port_1 = PROT=HTTPS,PORT=443$$,PROCTIMEOUT=600,TIMEOUT=3600

    # - name: Execute Ansible Role sap_control to restart SAP System/s for Profile update changes
    #   ansible.builtin.include_role:
    #     name: community.sap_operations.sap_control
    #   vars:
    #     sap_control_function: "restart_all_sap"
