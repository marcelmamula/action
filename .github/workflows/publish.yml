---
name: Publish Stage branch to Main

on:
  # Runs on merged pull_request: to stage branch
  pull_request:
    branches:
      - stage
    types:
      - closed

  # Enable manual start button
  workflow_dispatch:

jobs:
  sync:
    name: 'Publish Stage branch to Main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code - stage
        uses: actions/checkout@v4
        with:
          path: repo_playbooks_stage
          ref: stage

      - name: Checkout code - main
        uses: actions/checkout@v4
        with:
          path: repo_playbooks_main
          ref: main

      - name: Transformation tasks
        working-directory: repo_playbooks_stage
        run: |
          shopt -s nullglob  # Ensures that empty results are empty

          # Loop through all deploy_scenarios
          for dir in ./deploy_scenarios/*; do
            file=("$dir"/ansible_extravars.yml)

            if [[ -f "$file" ]]; then
              # Copy ansible_requirements
              cp ./common_fragments/ansible_requirements.yml $dir/

              fragment_vars="common_fragments/fragment.yml"
              if [ -f "$fragment_vars" ]; then
                sed 's/^---/\n/g' "$fragment_vars" >> "$file"
              fi  # if fragment_vars exists

            fi  # if base files were found
          done

          cp playbook.yml playbook_copy.yml

          echo "Append line" >> playbook.yml

          git rm -rf ./common_fragments

          ls -la

          shopt -u nullglob

      - name: Synchronize main with stage
        run: |
          rsync --archive --delete --exclude '.git' repo_playbooks_stage/ repo_playbooks_main/


      - name: Check for changes
        working-directory: repo_playbooks_main
        id: check_changes
        run: |
          git add .
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "::set-output name=has_changes::true"
          else
            echo "::set-output name=has_changes::false"
          fi

      - name: Commit changes
        working-directory: repo_playbooks_main
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
          else
            PR_NUMBER="manual"
          fi
          git commit -m "Merge changes from stage to main branch (PR #$PR_NUMBER)."


      - name: Force push changes
        working-directory: repo_playbooks_main
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          git push origin main --force
